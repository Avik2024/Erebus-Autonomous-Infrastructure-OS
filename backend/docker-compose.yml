version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: erebus_postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: erebus_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:v4.16.0
    container_name: backend_migrate_1
    depends_on:
      - postgres
    volumes:
      - ./migrations:/migrations
    entrypoint: ["migrate"]
    # command can be overridden when running; e.g.:
    # docker compose run --rm migrate -path=/migrations -database "postgres://erebus:erebus@postgres:5432/erebus_db?sslmode=disable" up

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erebus_backend
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      APP_PORT: ${APP_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    ports:
      - "8080:8080"
    restart: unless-stopped
    volumes:
      - ./config/config.yaml:/config/config.yaml:ro  # Mount your config.yaml

volumes:
  pgdata:
  redisdata:
